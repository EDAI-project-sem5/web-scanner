# vulnerability/csrf.py

import requests

def is_csrf_vulnerable(url):
    # Simulate a CSRF attack by sending a request without any anti-CSRF token
    test_payload = {"test_param": "test_value"}
    
    # Send POST request without CSRF token
    response = requests.post(url, data=test_payload)

    # Check if the response status code suggests a missing CSRF token
    # Typically, a 403 Forbidden or specific error message is a sign of CSRF protection
    if response.status_code == 200:  # No error, meaning it could be vulnerable
        return True
    return False